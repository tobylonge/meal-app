{"version":3,"sources":["../../api/test/meal.js"],"names":["process","env","NODE_ENV","chai","require","chaiHttp","expect","use","describe","it","done","request","app","get","end","err","res","to","have","status","body","be","a","length","not","eql","property","equal","data","id","name","category","price","console","log","post","send","put","delete"],"mappings":"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","sourcesContent":["process.env.NODE_ENV = 'test';\n\n// const app = require('../index');\nimport app from '../index';\n\nlet chai = require('chai');\nlet chaiHttp = require('chai-http');\nlet expect = chai.expect;\n\nchai.use(chaiHttp);\n\n//Our parent block\ndescribe('Meals', () => {\n    // beforeEach((done) => { //Before each test we empty the database\n    //     meal.remove({}, (err) => { \n    //        done();           \n    //     });        \n    // });\n\n    /*\n    * Test the /GET route\n    */\n    describe('GET /api/v1/meals', () => {\n        it('it should GET all meals', (done) => {\n        chai.request(app)\n            .get('/api/v1/meals')\n            .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.a('object');\n                    expect(res.body.length).not.to.be.eql(0);\n                    expect(res.body).to.have.property('status');\n                    expect(res.body).to.have.property('data');\n                    expect(res.body.status).to.be.a('string');\n                    expect(res.body.status).to.equal('success');\n                    expect(res.body.data).to.be.a('array');\n                    expect(res.body.data[0]).to.be.a('object');\n                    expect(res.body.data[0]).have.property('id');\n                    expect(res.body.data[0]).have.property('name');\n                    expect(res.body.data[0]).have.property('category');\n                    expect(res.body.data[0]).have.property('price');\n                    expect(res.body.data[0].id).to.be.a('number');\n                    expect(res.body.data[0].name).to.be.a('string');\n                    expect(res.body.data[0].category).to.be.a('string');\n                    expect(res.body.data[0].price).to.be.a('string');\n                done();\n            });\n        }); \n    });\n\n    describe('/GET /api/v1/meals/:id', () => {\n        it('it should GET a single meal', (done) => {\n        const id = 1;\n        chai.request(app)\n            .get(`/api/v1/meals/${id}`)\n            .end((err, res) => {\n                console.log('res ', res.body);\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.a('object');\n                    expect(res.body.length).not.to.be.eql(0);\n                    expect(res.body).to.have.property('status');\n                    expect(res.body).to.have.property('data');\n                    expect(res.body.status).to.be.a('string');\n                    expect(res.body.status).to.equal('success');\n                    expect(res.body.data).to.be.a('object');\n                    expect(res.body.data).have.property('id');\n                    expect(res.body.data).have.property('name');\n                    expect(res.body.data).have.property('category');\n                    expect(res.body.data).have.property('price');\n                    expect(res.body.data.id).to.be.a('number');\n                    expect(res.body.data.name).to.be.a('string');\n                    expect(res.body.data.category).to.be.a('string');\n                    expect(res.body.data.price).to.be.a('string');\n                    expect(res.body.data.id).to.equal(id);\n                done();\n            });\n        });\n        it('it should not get a single meal record for invalid id', (done) => {\n            const id = 500; //No id 500\n            chai.request(app)\n              .get(`/api/v1/meals/${id}`)\n              .end((err, res) => {\n                expect(res).to.have.status(200);\n                expect(res.body).to.be.a('object');\n                expect(res.body).to.have.property('status');\n                expect(res.body.status).to.equal('success'); \n                done();\n              }); \n          }); \n    });\n\n    // Test to post a meal\n    describe('POST /api/v1/meals', () => {\n        it('it should add a single meal on post', (done) => {\n        chai.request(app)\n            .post('/api/v1/meals')\n            .send({ name: 'Bread', category: 'Main Dishes', price: '200' })\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.a('object');\n            expect(res.body).to.have.property('status');\n            expect(res.body).to.have.property('data');\n            expect(res.body.status).to.be.a('string');\n            expect(res.body.status).to.equal('success');\n            expect(res.body.data).to.be.a('object');\n            expect(res.body.data).have.property('id');\n            expect(res.body.data).have.property('name');\n            expect(res.body.data).have.property('category');\n            expect(res.body.data).have.property('price');\n            expect(res.body.data.id).to.be.a('number');\n            expect(res.body.data.name).to.be.a('string');\n            expect(res.body.data.category).to.be.a('string');\n            expect(res.body.data.price).to.be.a('string');\n            done();\n            });\n        });\n    });\n\n    describe('PUT /api/v1/meals', () => {\n        it('should edit a single meal on put', (done) => {\n          chai.request(app)\n            .put(`/api/v1/meals/`)\n            .send({\n                id: 1,\n                \"name\": \"Yam\",\n                \"category\": \"Main Dishes\",\n                \"price\": \"100\"\n            })\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.a('object');\n            expect(res.body).to.have.property('status');\n            expect(res.body).to.have.property('data');\n            expect(res.body.status).to.be.a('string');\n            expect(res.body.status).to.equal('success');\n            expect(res.body.data).to.be.a('object');\n            expect(res.body.data).have.property('id');\n            expect(res.body.data).have.property('name');\n            expect(res.body.data).have.property('category');\n            expect(res.body.data).have.property('price');\n            expect(res.body.data.id).to.be.a('number');\n            expect(res.body.data.name).to.be.a('string');\n            expect(res.body.data.category).to.be.a('string');\n            expect(res.body.data.price).to.be.a('string');\n            expect(res.body.data.name).to.equal('Yam');\n            done();\n            });\n        });\n    });\n\n    describe('DELETE /api/v1/meals/:id', () => {\n        it('should delete an meal on delete', (done) => {\n          const id = 1;\n          chai.request(app)\n            .delete(`/api/v1/meals/${id}`)\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.a('object');\n            expect(res.body).to.have.property('status');\n            expect(res.body).to.have.property('data');\n            expect(res.body.status).to.be.a('string');\n            expect(res.body.status).to.equal('success');\n            expect(res.body.data).to.be.a('string');\n            done();\n            });\n        });\n    });\n\n    // Get all selected meals\n    describe('GET /api/v1/meals/selected', () => {\n        it('it should GET all selected meals', (done) => {\n        chai.request(app)\n            .get('/api/v1/meals/selected')\n            .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.a('object');\n                    expect(res.body.length).not.to.be.eql(0);\n                    expect(res.body).to.have.property('status');\n                    expect(res.body).to.have.property('data');\n                    expect(res.body.status).to.be.a('string');\n                    expect(res.body.status).to.equal('success');\n                    expect(res.body.data).to.be.a('array');\n                    expect(res.body.data[0]).to.be.a('object');\n                    expect(res.body.data[0]).have.property('id');\n                    expect(res.body.data[0]).have.property('name');\n                    expect(res.body.data[0]).have.property('category');\n                    expect(res.body.data[0]).have.property('price');\n                    expect(res.body.data[0].id).to.be.a('number');\n                    expect(res.body.data[0].name).to.be.a('string');\n                    expect(res.body.data[0].category).to.be.a('string');\n                    expect(res.body.data[0].price).to.be.a('string');\n                done();\n            });\n        }); \n    });\n\n    // Test to post selected meals\n    describe('POST /api/v1/meals/selected', () => {\n        it('it should add selected meals', (done) => {\n        chai.request(app)\n            .post('/api/v1/meals/selected')\n            .send([1,2])\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.a('object');\n            expect(res.body).to.have.property('status');\n            expect(res.body).to.have.property('data');\n            expect(res.body.status).to.be.a('string');\n            expect(res.body.status).to.equal('success');\n            expect(res.body.data).to.be.a('array');\n            expect(res.body.data[0]).to.be.a('object');\n            expect(res.body.data[0]).have.property('id');\n            expect(res.body.data[0]).have.property('name');\n            expect(res.body.data[0]).have.property('category');\n            expect(res.body.data[0]).have.property('price');\n            expect(res.body.data[0].id).to.be.a('number');\n            expect(res.body.data[0].name).to.be.a('string');\n            expect(res.body.data[0].category).to.be.a('string');\n            expect(res.body.data[0].price).to.be.a('string');\n            done();\n            });\n        });\n    });\n\n    // Test to post selected orders\n    describe('POST /api/v1/meals/order', () => {\n        it('it should add orders from user', (done) => {\n        chai.request(app)\n            .post('/api/v1/meals/order')\n            .send([1,2])\n            .end((err, res) => {\n            expect(res).to.have.status(200);\n            expect(res.body).to.be.a('object');\n            expect(res.body).to.have.property('status');\n            expect(res.body).to.have.property('data');\n            expect(res.body.status).to.be.a('string');\n            expect(res.body.status).to.equal('success');\n            expect(res.body.data).to.be.a('array');\n            expect(res.body.data[0]).to.be.a('object');\n            expect(res.body.data[0]).have.property('id');\n            expect(res.body.data[0]).have.property('name');\n            expect(res.body.data[0]).have.property('category');\n            expect(res.body.data[0]).have.property('price');\n            expect(res.body.data[0].id).to.be.a('number');\n            expect(res.body.data[0].name).to.be.a('string');\n            expect(res.body.data[0].category).to.be.a('string');\n            expect(res.body.data[0].price).to.be.a('string');\n            done();\n            });\n        });\n    });\n\n    // Get all selected orders\n    describe('GET /api/v1/meals/order', () => {\n        it('it should GET all orders from the day', (done) => {\n        chai.request(app)\n            .get('/api/v1/meals/order')\n            .end((err, res) => {\n                    expect(res).to.have.status(200);\n                    expect(res.body).to.be.a('object');\n                    expect(res.body.length).not.to.be.eql(0);\n                    expect(res.body).to.have.property('status');\n                    expect(res.body).to.have.property('data');\n                    expect(res.body.status).to.be.a('string');\n                    expect(res.body.status).to.equal('success');\n                    expect(res.body.data).to.be.a('array');\n                    expect(res.body.data[0]).to.be.a('object');\n                    expect(res.body.data[0]).have.property('id');\n                    expect(res.body.data[0]).have.property('name');\n                    expect(res.body.data[0]).have.property('category');\n                    expect(res.body.data[0]).have.property('price');\n                    expect(res.body.data[0].id).to.be.a('number');\n                    expect(res.body.data[0].name).to.be.a('string');\n                    expect(res.body.data[0].category).to.be.a('string');\n                    expect(res.body.data[0].price).to.be.a('string');\n                done();\n            });\n        }); \n    });\n    \n});"],"file":"meal.js"}